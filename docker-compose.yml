version: '3.8'

services:
  zookeeper:
    image: zookeeper:3.7.2
    ports:
      - "2181:2181"
    environment:
      - ZOOKEEPER_TICK_TIME=2000
      - ZOOKEEPER_CLIENT_PORT=2181  # Allow unauthenticated access
    networks:
      - fb_kafka

  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
    depends_on:
      - zookeeper
    networks:
      - fb_kafka
    healthcheck:
      test: "nc -z localhost 9092"  # Check if the Kafka port is open
      interval: 10s  # Check every 10 seconds
      timeout: 10s   # Timeout after 10 seconds
      retries: 2     # Retry 5 times before considering the service unhealthy

  spark:
    image: bitnami/spark:3.5
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_USER=spark
    ports:
      - '8080:8080'
      - "7077:7077"

  spark-worker:
    image: bitnami/spark:3.5
    container_name: spark-worker
    hostname: spark-worker
    ports:
      - "8081:8081"
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark:7077
      - SPARK_WORKER_MEMORY=2G
      - SPARK_WORKER_CORES=2
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_USER=spark
    networks:
      - fb_kafka
    volumes:
      - ./consumer:/app/consumer
    command: bash -c "pip install -r /app/consumer/requirements.txt && python /app/consumer/consumer.py"

  producer:
    build:
      context: ./producer
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - fb_kafka

networks:
  fb_kafka:
    driver: bridge
